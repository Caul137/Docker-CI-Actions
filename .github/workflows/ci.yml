name: CI

on:
  push:
    branches:
      - main

# permissions:
#   id-token: write
#   contents: write

jobs:
  build:
    name: "build && push"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22, 24]

    steps:
      - uses: actions/checkout@v4

      - name: node | ${{matrix.node}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node}}
          cache: "npm"
      - run: npm ci
      - run: npm test

      - name: Checkout
        uses: actions/checkout@v5
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Tag
        id: generate_tag
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      # - name: AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v5.0.0
      #   with:
      #     role-to-assume: ""
      #     aws-region: 'us-east-2'

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v2

      # - name: build docker image
      #   id: build-docker-image
      #   env:
      #     REGISRTY: ${{ steps.login-ecr.outputs.registry }}
      #     TAG: ${{ steps.generate_tag.outputs.sha}}
      #   run: |
      #     docker build -t $REGISRTY/caul_ci:$TAG
      #     docker push $REGISRTY/caul_ci:$TAG
      #     docker tag -t $REGISRTY/caul_ci:$TAG $REGISRTY/caul_ci:$latest
      #     docker push $REGISRTY/caul_ci:$latest
      #     IMAGE=$(echo $REGISRTY/caul_ci:$TAG )
      #     echo "image=$IMAGE" >> $GITHUB_OUTPUT

      # - name: Deploy to App Runner
      #   id: deploy-app-runner
      #   uses: awslabs/amazon-app-runner-deploy@main
      #   with:
      #     service: caul_ci
      #     image: ${{ steps.build-docker-image.outputs.image}}
      #     acces-role-arn:
      #     region: us-east-2
      #     cpu: 1
      #     memory: 2
      #     port: 80
      #     wait-for-service-stability-seconds: 180

      # - name: App runner check
      #   run: echo "App Runner running... ${{ steps.deploy-app-runner.outputs.service.url }}"

      # - name: Login container registry
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{secrets.DOCKERHUB_USERNAME}}
      #     password: ${{secrets.DOCKERHUB_TOKEN}}

      # - name: build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     push: true
      #     tags: caul11/caul_ci:${{steps.generate_tag.outputs.sha}}, caul11/caul_ci:latest
